2023-03-29 05:28:44.337899: I tensorflow/core/util/port.cc:110] oneDNN custom operations are on. You may see slightly different numerical results due to floating-point round-off errors from different computation orders. To turn them off, set the environment variable `TF_ENABLE_ONEDNN_OPTS=0`.
2023-03-29 05:28:44.340761: I tensorflow/tsl/cuda/cudart_stub.cc:28] Could not find cuda drivers on your machine, GPU will not be used.
2023-03-29 05:28:44.374027: I tensorflow/tsl/cuda/cudart_stub.cc:28] Could not find cuda drivers on your machine, GPU will not be used.
2023-03-29 05:28:44.374324: I tensorflow/core/platform/cpu_feature_guard.cc:182] This TensorFlow binary is optimized to use available CPU instructions in performance-critical operations.
To enable the following instructions: AVX2 AVX512F AVX512_VNNI FMA, in other operations, rebuild TensorFlow with the appropriate compiler flags.
2023-03-29 05:28:49.760200: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Could not find TensorRT
[nltk_data] Downloading package stopwords to
[nltk_data]     /mnt/nas_home/yw611/nltk_data...
[nltk_data]   Package stopwords is already up-to-date!
Traceback (most recent call last):
  File "create_modeling_data.py", line 19, in <module>
    res_dict = dcu.create_all_subjects_data("Sentence_level_data/Sentence_data", eeg_format)
  File "/mnt/nas_home/yw611/thesis/sentiment-analysis/preprocessing/data_creation_utils.py", line 203, in create_all_subjects_data
    all_sentences_info = extract_sentence_level_data(subject, eeg_float_resolution=eeg_float_resolution)
  File "/mnt/nas_home/yw611/thesis/sentiment-analysis/preprocessing/data_creation_utils.py", line 181, in extract_sentence_level_data
    data_dict["content"] = load_matlab_string(f[obj_reference_content])
  File "/mnt/nas_home/yw611/thesis/sentiment-analysis/preprocessing/data_creation_utils.py", line 41, in load_matlab_string
    extracted_string = ''.join([chr(c) for c in char_array])
  File "/mnt/nas_home/yw611/thesis/sentiment-analysis/preprocessing/data_creation_utils.py", line 41, in <listcomp>
    extracted_string = ''.join([chr(c) for c in char_array])
TypeError: only integer scalar arrays can be converted to a scalar index
